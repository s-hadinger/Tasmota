; ***  Example PlatformIO Project Configuration Override File   ***
; ***  Changes done here override settings in platformio.ini    ***
;

; *** Override standard env tasmota32-wroom-32 ***
[env:tasmota32-minimal]
extends                 = env:tasmota32
board_build.partitions  = esp32_partition_app1856k_spiffs320k.csv
build_flags                 = ${common32.build_flags}
                            -I$PROJECT_DIR/include -includetasmota_include.h
; platform_packages           = framework-arduinoespressi
lib_extra_dirs          = lib/libesp32


; *** Tasmota32 development core version ESP32 IDF4.4
[env:tasmota32-dev]
extends                     = env:tasmota32idf4
platform_packages           = framework-arduinoespressif32 @ https://github.com/Jason2866/esp32-arduino-lib-builder/releases/download/511/framework-arduinoespressif32-release_v4.4-432c3c78c.tar.gz
                              platformio/tool-esptoolpy @ https://github.com/tasmota/esptool/releases/download/v3.2/esptool-v3.2.zip
                              platformio/tool-mklittlefs @ ~1.203.200522
build_flags                 = ${env:tasmota32idf4.build_flags}
                              -D FIRMWARE_TASMOTA32

[env:tasmota32-base-dev]
; extends                 = env:tasmota32-dev
extends                     = env:tasmota32idf4
; platform_packages           = framework-arduinoespressif32 @ https://github.com/Jason2866/esp32-arduino-lib-builder/releases/download/507/framework-arduinoespressif32-release_v4.4-b0bf04769.tar.gz
; platform_packages           = framework-arduinoespressif32 @ https://github.com/Jason2866/esp32-arduino-lib-builder/releases/download/514/framework-arduinoespressif32-release_v4.4-432c3c78c.tar.gz
; platform_packages           = framework-arduinoespressif32 @ https://github.com/Jason2866/esp32-arduino-lib-builder/releases/download/518/framework-arduinoespressif32-release_v4.4-7033e3b57.tar.gz
platform_packages           = framework-arduinoespressif32 @ https://github.com/tasmota/arduino-esp32/releases/download/2.0.0/framework-arduinoespressif32-release_IDF4.4.tar.gz
;                               platformio/tool-mklittlefs @ ~1.203.200522
                              platformio/tool-esptoolpy @ https://github.com/tasmota/esptool/releases/download/v3.2/esptool-v3.2.zip
                              platformio/tool-mklittlefs @ ~1.203.200522
build_flags                 = ${env:tasmota32idf4.build_flags}
                              -fno-exceptions
                              -DBOARD_HAS_PSRAM 
                              -DHAS_PSRAM_FIX -mfix-esp32-psram-cache-issue -mfix-esp32-psram-cache-strategy=memw
board_build.f_cpu       = 240000000L
upload_speed            = 115200
upload_port             =  /dev/cu.usbserial-018ADAE0
board_build.partitions  = esp32_partition_app1856k_spiffs320k.csv
lib_ignore              = 
    NimBLE-Arduino
    ESP8266SAM
    SSD3115
    ILI9341
    ILI9488
    FrogmoreScd30
    ESP Mail Client
    ESP32-HomeKit
    ESP8266Audio
    RA8876
    ESP32 BLE Arduino
    ESP KNX IP Library
    TTGO TWatch Library
    TasmotaModbus
    TM1638plus
    LiquidCrystal_I2C
    LedControl
    LOLIN_HP303B
    KeeloqLib
    FrogmoreScd40
    Adafruit Fingerprint Sensor Library
    A4988_Stepper
    M5 Stack Core2 library
    arduino-mcp2515-1.0.1
    VL53L0X
    VL53L1X
    SevenSegmentTM1637
    Mutichannel_Gas_Sensor

; *** Override standard env tasmota32-wroom-32 ***
[env:tasmota32-base]
extends                 = env:tasmota32

; board_build.f_cpu       = 160000000L
board_build.f_cpu       = 240000000L
; board_build.f_cpu       = 80000000L
; board_build.flash_mode  = qio
; board_build.f_flash     = 80000000L
upload_speed            = 115200
; monitor_speed           = 115200
; upload_port             = /dev/cu.SLAB_USBtoUART
; upload_port             =  /dev/cu.usbserial-025B6DC5
; upload_port             =  /dev/cu.wchusbserial53190170011
upload_port             =  /dev/cu.usbserial-141220
; upload_port             =  /dev/cu.usbserial-02SWYZMB
; upload_port             =  /dev/cu.usbserial-018ADAE0
; upload_port             =  /dev/cu.usbserial-DN0489N1
; board_build.partitions  = esp32_partition_app1572k_spiffs983k.csv
board_build.partitions  = esp32_partition_app1856k_spiffs320k.csv
build_unflags               = ${core.build_unflags}
build_flags                 = ${common32.build_flags}
                              -DBOARD_HAS_PSRAM 
                              -DHAS_PSRAM_FIX -mfix-esp32-psram-cache-issue -mfix-esp32-psram-cache-strategy=memw
                              ;-DHAS_PSRAM_FIX -mfix-esp32-psram-cache-issue ;-lc-psram-workaround -lm-psram-workaround
                            ; wrappers for the crash-recorder
                            ;-save-temps=obj -fverbose-asm

; platform_packages           = framework-arduinoespressif32 @ https://github.com/tasmota/arduino-esp32/releases/download/2.0.0/framework-arduinoespressif32-release_IDF4.4.tar.gz
; lib_extra_dirs          = libesp, lib/libesp32, lib/lib_basic, lib/lib_i2c, lib/lib_rf, lib/lib_div, lib/lib_ssl, lib/lib_display
; lib_extra_dirs          = lib/libesp32, lib/lib_basic, lib/lib_i2c, lib/lib_rf, lib/lib_div, lib/lib_ssl, lib/lib_display
lib_ignore              = 
    NimBLE-Arduino
    ESP8266SAM
    SSD3115
    ILI9341
    ILI9488
    FrogmoreScd30
    ESP Mail Client
    ESP32-HomeKit
    ; ESP8266Audio
    RA8876
    ESP32 BLE Arduino


; *** Override standard env tasmota32-wroom-32 ***
[env:tasmota32-base-minimal]
extends                 = env:tasmota32

board_build.f_cpu       = 80000000L
; board_build.flash_mode  = qio
upload_speed            = 115200
; monitor_speed           = 115200
upload_port             =  /dev/cu.usbserial-141220
board_build.partitions  = esp32_partition_app1856k_spiffs320k.csv
build_unflags               = ${core.build_unflags}
                              -fexceptions
build_flags                 = ${common32.build_flags}
                              -fno-exceptions
                              ;-DBOARD_HAS_PSRAM 
                              ;-DHAS_PSRAM_FIX -mfix-esp32-psram-cache-issue -mfix-esp32-psram-cache-strategy=memw
                              ;-DHAS_PSRAM_FIX -mfix-esp32-psram-cache-issue ;-lc-psram-workaround -lm-psram-workaround
                            ; wrappers for the crash-recorder
                            ;-save-temps=obj -fverbose-asm
lib_extra_dirs          = libesp, lib/libesp32, lib/lib_ssl

; platform_packages           = framework-arduinoespressif32 @ https://github.com/tasmota/arduino-esp32/releases/download/2.0.0/framework-arduinoespressif32-release_IDF4.4.tar.gz
; lib_extra_dirs          = libesp, lib/libesp32, lib/lib_basic, lib/lib_i2c, lib/lib_rf, lib/lib_div, lib/lib_ssl, lib/lib_display
; lib_extra_dirs          = lib/libesp32, lib/lib_basic, lib/lib_i2c, lib/lib_rf, lib/lib_div, lib/lib_ssl, lib/lib_display
lib_ignore              = 
    NimBLE-Arduino
    ESP8266SAM
    SSD3115
    ILI9341
    ILI9488
    FrogmoreScd30
    ESP Mail Client
    ESP32-HomeKit
    ESP8266Audio
    RA8876
    ESP32 BLE Arduino
    HttpClient light for Berry
    UdpListener
    Zip-readonly-FS
    Berry Tasmota mapping
    Berry
    Berry mapping to C
    DHT sensor library
    Micro-RTSP


[env:tasmota32-znp32]
extends                 = env:tasmota32
;board_build.f_cpu       = 240000000L
board_build.partitions  = esp32_partition_app1856k_spiffs320k.csv
; board_build.partitions  = esp32_partition_app1984k_spiffs64k.csv
build_flags                 = ${common32.build_flags}
                            -DNDEBUG
                            -D_HADINGER_ZNP32
lib_ignore              = 
    NimBLE-Arduino
    ESP8266Audio
    ESP8266SAM

[env:tasmota32-ezsp32]
extends                 = env:tasmota32
;board_build.f_cpu       = 240000000L
board_build.partitions  = esp32_partition_app1856k_spiffs320k.csv
; board_build.partitions  = esp32_partition_app1984k_spiffs64k.csv
; platform                    = espressif32 @ 3.2.0
; platform_packages           = platformio/tool-mklittlefs @ ~1.203.200522
build_flags                 = ${common32.build_flags}
                            -DNDEBUG
                            -D_HADINGER_EZSP32
lib_ignore              = 
    NimBLE-Arduino
    ESP8266Audio
    ESP8266SAM

[env:tasmota32-slow]
extends                 = env:tasmota32-base
board_build.f_cpu       = 160000000L


[env:tasmota-berry]
extends                 = env:tasmota
board_build.f_cpu           = 160000000L
; Build variant 2MB = 1MB firmware, +744k OTA, 256k filesystem (Zigbee Bridge, most Shelly devices)
board_build.ldscript        = eagle.flash.2m256.ld
build_flags                 = ${core.build_flags}
                            ; -save-temps=obj -fverbose-asm
                            -D_HADINGER_DEV
upload_port             = /dev/cu.usbserial-141110
lib_extra_dirs          = lib/libesp32, lib/lib_basic, lib/lib_div, lib/lib_ssl
; build_flags             = ${common32.build_flags} -DBOARD_HAS_PSRAM -mfix-esp32-psram-cache-issue -DFIRMWARE_ODROID_GO
; lib_extra_dirs          = lib/libesp32, lib/lib_basic, lib/lib_i2c, lib/lib_rf, lib/lib_div, lib/lib_ssl, lib/lib_display



[env:tasmota-base]
extends                 = env:tasmota
board_build.f_cpu           = 160000000L
; Build variant 2MB = 1MB firmware, +744k OTA, 256k filesystem (Zigbee Bridge, most Shelly devices)
board_build.ldscript        = eagle.flash.2m256.ld
; board_build.ldscript        = eagle.flash.1m64.ld
build_flags                 = ${core.build_flags}
                            ; -save-temps=obj -fverbose-asm
                            ; -D_HADINGER_ZNP
                            ; -DPIO_FRAMEWORK_MMU__16KB_CACHE__48KB_IRAM_SHARED_2NDHEAP
upload_port             = /dev/cu.usbserial-141110
; build_flags             = ${common32.build_flags} -DBOARD_HAS_PSRAM -mfix-esp32-psram-cache-issue -DFIRMWARE_ODROID_GO
; lib_extra_dirs          = lib/libesp32, lib/lib_basic, lib/lib_i2c, lib/lib_rf, lib/lib_div, lib/lib_ssl, lib/lib_display
lib_ignore              = 
    ESP8266Audio
    ESP8266SAM
    lib_mail

[env:tasmota-cc2530]
extends                 = env:tasmota
board_build.f_cpu           = 160000000L
; Build variant 2MB = 1MB firmware, +744k OTA, 256k filesystem (Zigbee Bridge, most Shelly devices)
board_build.ldscript        = eagle.flash.2m256.ld
build_flags                 = ${core.build_flags}
                            ; -save-temps=obj -fverbose-asm
                            -D_HADINGER_ZNP
upload_port             = /dev/cu.usbserial-141110
; build_flags             = ${common32.build_flags} -DBOARD_HAS_PSRAM -mfix-esp32-psram-cache-issue -DFIRMWARE_ODROID_GO
; lib_extra_dirs          = lib/libesp32, lib/lib_basic, lib/lib_i2c, lib/lib_rf, lib/lib_div, lib/lib_ssl, lib/lib_display
lib_ignore              = 
    ESP8266Audio
    ESP8266SAM
    IRremoteESP8266
    lib_mail
    NeoPixelBus-2.6.1.4

[env:tasmota-ezsp]
extends                 = env:tasmota
board_build.f_cpu           = 160000000L
; Build variant 2MB = 1MB firmware, +744k OTA, 256k filesystem (Zigbee Bridge, most Shelly devices)
board_build.ldscript        = eagle.flash.2m256.ld
build_flags                 = ${core.build_flags}
                            -save-temps=obj -fverbose-asm
                            -D_HADINGER_EZSP
; upload_port             = /dev/cu.usbserial-141110
; build_flags             = ${common32.build_flags} -DBOARD_HAS_PSRAM -mfix-esp32-psram-cache-issue -DFIRMWARE_ODROID_GO
; lib_extra_dirs          = lib/libesp32, lib/lib_basic, lib/lib_i2c, lib/lib_rf, lib/lib_div, lib/lib_ssl, lib/lib_display
lib_ignore              = 
    ESP8266Audio
    ESP8266SAM
    IRremoteESP8266
    lib_mail
    NeoPixelBus-2.6.1.4

[env:tasmota-bulb]
extends                 = env:tasmota
board_build.f_cpu           = 160000000L
; Build variant 2MB = 1MB firmware, +744k OTA, 256k filesystem (Zigbee Bridge, most Shelly devices)
; board_build.ldscript        = eagle.flash.2m256.ld
build_flags                 = ${core.build_flags}
                            ; -save-temps=obj -fverbose-asm
                            -D_HADINGER_BULB
; upload_port             = /dev/cu.usbserial-141110
; build_flags             = ${common32.build_flags} -DBOARD_HAS_PSRAM -mfix-esp32-psram-cache-issue -DFIRMWARE_ODROID_GO
; lib_extra_dirs          = lib/libesp32, lib/lib_basic, lib/lib_i2c, lib/lib_rf, lib/lib_div, lib/lib_ssl, lib/lib_display
lib_ignore              = 
    NimBLE-Arduino
    ESP8266SAM
    ESP8266Audio

[env:tasmota-irhome]
extends                 = env:tasmota
board_build.f_cpu           = 160000000L
; Build variant 2MB = 1MB firmware, +744k OTA, 256k filesystem (Zigbee Bridge, most Shelly devices)
; board_build.ldscript        = eagle.flash.2m256.ld
build_flags                 = ${core.build_flags}
                            ; -save-temps=obj -fverbose-asm
                            -D_HADINGER_IR
; upload_port             = /dev/cu.usbserial-141110
; build_flags             = ${common32.build_flags} -DBOARD_HAS_PSRAM -mfix-esp32-psram-cache-issue -DFIRMWARE_ODROID_GO
; lib_extra_dirs          = lib/libesp32, lib/lib_basic, lib/lib_i2c, lib/lib_rf, lib/lib_div, lib/lib_ssl, lib/lib_display
lib_ignore              = 
    NimBLE-Arduino
    ESP8266SAM
    ESP8266Audio

; *** Override standard env tasmota32-wroom-32 ***
[env:tasmota32-wroom-32]
extends                 = env:tasmota32
board_build.f_cpu       = 240000000L
; board_build.flash_mode  = qio
; board_build.f_flash     = 80000000L
upload_speed            = 115200
; monitor_speed           = 115200
; upload_port             = COM3
board_build.partitions  = esp32_partition_app1572k_spiffs983k.csv
; build_flags             = ${common32.build_flags} -DBOARD_HAS_PSRAM -mfix-esp32-psram-cache-issue -DFIRMWARE_ODROID_GO
; lib_extra_dirs          = lib/libesp32, lib/lib_basic, lib/lib_i2c, lib/lib_rf, lib/lib_div, lib/lib_ssl, lib/lib_display


[env:tasmota32-denky]
extends                 = env:tasmota32-wroom-32
upload_port             = /dev/cu.usbserial-DN0489N1
build_flags             = ${common32.build_flags}
                          -D_HADINGER_DENKY

[env:tasmota32-olimexpoe]
extends                 = env:tasmota32-wroom-32
upload_port             = /dev/cu.usbserial-141110
build_flags             = ${common32.build_flags}
                          -D_HADINGER_DENKY

[env:tasmota32-nodemcu]
extends                 = env:tasmota32-wroom-32
upload_port             = /dev/cu.SLAB_USBtoUART
build_flags             = ${common32.build_flags}
                          -D_HADINGER_DENKY


[env:tasmota32-m5stack]
extends                 = env:tasmota32-wroom-32
upload_port             = /dev/cu.SLAB_USBtoUART
build_flags             = ${common32.build_flags}
                          -D_HADINGER_M5STACK


; // #define _HADINGER_DEV       // development testing
; #define _HADINGER_DENKY     // Denky device
; // #define _HADINGER_IR_DEV       // development testing
; // #define _HADINGER_BULB       // configuration for AWS IoT configured switches and bulbs, Hue emulation, should be 160 MHz
; // #define _HADINGER_IR         // configuration for AWS IoT IR Blaster
; // #define _HADINGER_ZNP        // configuration for CC2530 ZNP coordinator + AWS IoT + Ping
; // #define _HADINGER_EZSP       // configuration for EZSP coordinator + AWS IoT + I2C + TCP Bridge

[env:tasmota32-stickc]
extends                 = env:tasmota32-base
board_build.f_cpu       = 240000000L
board_build.flash_mode  = qio
board_build.f_flash     = 80000000L
upload_port             = /dev/cu.usbserial-21524AEB83
upload_speed            = 115200
build_flags             = ${common32.build_flags} -DFIRMWARE_M5STACK_CORE2
lib_extra_dirs          = lib/libesp32, lib/lib_basic, lib/lib_i2c, lib/lib_rf, lib/lib_div, lib/lib_ssl, lib/lib_display, lib/lib_audio, lib/libesp32_lvgl

[env:tasmota32-core2-custom]
extends                 = env:tasmota32_base
board                   = odroid_esp32
board_build.f_cpu       = 240000000L
board_build.flash_mode  = qio
board_build.f_flash     = 80000000L
upload_speed            = 2000000
board_build.partitions  = esp32_partition_app2944k_spiffs10M.csv
build_flags             = ${common32.build_flags} -DBOARD_HAS_PSRAM -mfix-esp32-psram-cache-issue -lc-psram-workaround -lm-psram-workaround
                          ; -DFIRMWARE_M5STACK_CORE2
                          -D_HADINGER_M5STACK_CORE2
lib_extra_dirs          = lib/libesp32, lib/lib_basic, lib/lib_i2c, lib/lib_rf, lib/lib_div, lib/lib_ssl, lib/lib_display, lib/lib_audio, lib/libesp32_lvgl

[core]
; Activate (by removing the ";" in the next lines) if you want to override the standard core defined in platformio.ini !!!
platform                    = ${core_stage.platform}
platform_packages           = ${core_stage.platform_packages}
build_unflags               = ${core_stage.build_unflags}
build_flags                 = ${core_stage.build_flags}

[core_stage]
; *** Esp8266 core for Arduino version stage
platform                    = espressif8266 @ 3.0.0
platform_packages           =
; *** Use Xtensa build chain 10.2. GNU23 from https://github.com/earlephilhower/esp-quick-toolchain
                              tasmota/toolchain-xtensa @ 5.100200.210303
build_unflags               = ${esp_defaults.build_unflags}
                              -Wswitch-unreachable
build_flags                 = ${esp82xx_defaults.build_flags}
; *** 16k extra heap https://github.com/esp8266/Arduino/pull/7060
                              -D PIO_FRAMEWORK_ARDUINO_MMU_CACHE16_IRAM48_SECHEAP_SHARED
                              -Wno-switch-unreachable

; *** EXPERIMENTAL Tasmota version for ESP32-C3
; [env:tasmota32c3]
; extends                     = env:tasmota32_base
; board                       = esp32c3
; platform                    = https://github.com/platformio/platform-espressif32.git#feature/arduino-idf-master
; platform_packages           = tasmota/framework-arduinoespressif32 @ 2.0.0+tasmota
;                               platformio/tool-mklittlefs @ ~1.203.200522
; build_unflags               = ${env:tasmota32_base.build_unflags}
;                               -Wswitch-unreachable
;                               -Wstringop-overflow
;                               -Wincompatible-pointer-types
;                               -mtarget-align
;                               -DNDEBUG
; build_flags                 = ${env:tasmota32_base.build_flags}
;                               -Wno-switch-unreachable
;                               -Wno-stringop-overflow
; ; *** Comment next two lines to disable BLE
;                               ;-DUSE_BLE_ESP32
;                               ;-DUSE_MI_ESP32
;                               ;-DESP32_STAGE=true
; lib_extra_dirs              = lib/libesp32
;                               lib/libesp32_div
;                               lib/libesp32_lvgl
;                               lib/lib_basic
;                               lib/lib_i2c
;                               lib/lib_ssl
;                               lib/lib_display
; lib_ignore                  =
;                               TTGO TWatch Library
;                               ESP32-HomeKit
;                               Micro-RTSP


; *** Beta Tasmota version for ESP32 IDF4.4.
[env:tasmota32idf4-base]
extends                     = env:tasmota32idf4
; platform                    = https://github.com/platformio/platform-espressif32.git#feature/arduino-idf-master
; platform_packages           = framework-arduinoespressif32 @ https://github.com/Jason2866/esp32-arduino-lib-builder/releases/download/495/framework-arduinoespressif32-master-dc1041d15.tar.gz
platform_packages           = ${core32.platform_packages}
;                             ;   framework-arduinoespressif32 @ https://github.com/tasmota/arduino-esp32/releases/download/2.0.1rc1/framework-arduinoespressif32-release_IDF4.4.tar.gz
                              framework-arduinoespressif32 @ https://github.com/Jason2866/esp32-arduino-lib-builder/releases/download/507/framework-arduinoespressif32-release_v4.4-b0bf04769.tar.gz
; build_unflags               = ${env:tasmota32_base.build_unflags}
;                               -Wswitch-unreachable
;                               -Wstringop-overflow
;                               -Wincompatible-pointer-types
upload_port             =  /dev/cu.usbserial-DN0489N1
build_flags                 = ${env:tasmota32idf4.build_flags}
                            ;   -Wno-switch-unreachable
                            ;   -Wno-stringop-overflow
                              -DHAS_PSRAM_FIX -mfix-esp32-psram-cache-issue ;-lc-psram-workaround -lm-psram-workaround
                              ; ***Uncomment next two lines to enable BLE
                              ;-DUSE_BLE_ESP32
                              ;-DUSE_MI_ESP32
                              ;-DESP32_STAGE=true
lib_extra_dirs          = libesp, lib/libesp32, lib/lib_basic, lib/lib_i2c, lib/lib_rf, lib/lib_div, lib/lib_ssl, lib/lib_display, lib/lib_audio, lib/libesp32_lvgl
lib_ignore              = 
    NimBLE-Arduino
    ESP8266SAM
    SSD3115
    ILI9341
    ILI9488
    FrogmoreScd30
    ESP Mail Client
    ESP32-HomeKit
    ESP8266Audio
; lib_extra_dirs              = lib/libesp32
;                               lib/libesp32_div
;                               lib/libesp32_lvgl
;                               lib/lib_basic
;                               lib/lib_i2c
;                               lib/lib_ssl
;                               lib/lib_display

; *** EXPERIMENTAL Tasmota version for ESP32 IDF4.4.
; [env:tasmota32idf4]
; extends                     = env:tasmota32_base
; ; platform                    = https://github.com/platformio/platform-espressif32.git#feature/arduino-idf-master
; ; platform_packages           = tasmota/framework-arduinoespressif32 @ 2.0.0+tasmota
; ;                               platformio/tool-mklittlefs @ ~1.203.200522
; platform                    = https://github.com/platformio/platform-espressif32.git#feature/arduino-idf-master
; platform_packages           = framework-arduinoespressif32 @ https://github.com/tasmota/arduino-esp32/releases/download/2.0.0/framework-arduinoespressif32-release_IDF4.4.tar.gz
;                               platformio/tool-mklittlefs @ ~1.203.200522
; ; platform                    = https://github.com/platformio/platform-espressif32.git#feature/arduino-idf-master
; ; platform_packages           = tasmota/framework-arduinoespressif32 @ 2.0.0+tasmota
; ;                               platformio/tool-mklittlefs @ ~1.203.200522
; build_unflags               = ${env:tasmota32_base.build_unflags}
;                               -Wswitch-unreachable
;                               -Wstringop-overflow
;                               -Wincompatible-pointer-types
; build_flags                 = ${env:tasmota32_base.build_flags}
;                               -Wno-switch-unreachable
                            ;   -Wno-stringop-overflow
                              ; wrappers for the crash-recorder
                              ;-Wl,--wrap=panicHandler -Wl,--wrap=xt_unhandled_exception ; esp-idf 3.x
; ***Uncomment next two lines to enable BLE
                              ;-DUSE_BLE_ESP32
                              ;-DUSE_MI_ESP32
                              ;-DESP32_STAGE=true
; upload_port                 = /dev/cu.usbserial-141140
; upload_port                 = /dev/cu.usbserial-DENKY_0010
; build_flags                 = ${esp32_defaults.build_flags}
;                               -Wno-switch-unreachable
;                               ;-DESP32_STAGE=true
;                               -DBOARD_HAS_PSRAM 
; lib_extra_dirs          = libesp, lib/libesp32, lib/lib_basic, lib/lib_i2c, lib/lib_rf, lib/lib_div, lib/lib_ssl, lib/lib_display, lib/lib_audio, lib/libesp32_lvgl
; lib_ignore              = 
;     NimBLE-Arduino
;     ESP8266SAM
;     SSD3115
;     ILI9341
;     ILI9488
;     FrogmoreScd30
;     ESP Mail Client
;     ESP32-HomeKit
;     ; ESP8266Audio
